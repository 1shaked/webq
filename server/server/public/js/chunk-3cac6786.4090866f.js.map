{"version":3,"sources":["webpack:///../../../src/components/VOverlay/VOverlay.ts","webpack:///../../../src/components/VOverlay/index.ts","webpack:///../../../src/mixins/overlayable/index.ts","webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///../../../src/components/VCard/VCard.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":["mixins","name","props","absolute","color","type","default","dark","opacity","Number","value","zIndex","computed","__scrim","data","this","setBackgroundColor","staticClass","style","computedOpacity","$createElement","classes","themeClasses","isActive","styles","methods","genContent","$slots","render","children","h","class","hideOverlay","overlayColor","overlayOpacity","String","overlay","watch","genOverlay","beforeDestroy","createOverlay","propsData","parent","$el","document","requestAnimationFrame","removeOverlay","showScroll","scrollListener","e","includes","up","down","checkPath","hasScrollbar","el","Node","window","shouldScroll","delta","isInside","path","composedPath","dialog","$refs","selected","index","hideScroll","$vuetify","breakpoint","passive","baseMixins","directives","ClickOutside","disabled","fullscreen","light","maxWidth","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","width","activatedBy","animate","animateTimeout","stackMinZIndex","contentClasses","hasActivator","Boolean","$scopedSlots","created","$attrs","hasOwnProperty","beforeMount","unbind","animateClick","closeConditional","target","_isDestroyed","content","contains","activeZIndex","show","bind","onKeydown","getOpenDependents","activator","onFocusin","getOpenDependentElements","some","focusable","querySelectorAll","focus","ref","args","include","on","click","undefined","showLazyContent","attrs","role","tabindex","getScopeIdAttrs","keydown","ThemeProvider","root","attach","flat","hover","img","link","loaderHeight","outlined","raised","shaped","loading","genProgress","tag","defaultMenuProps","offsetY","offsetOverflow","allowOverflow","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","lazySearch","selectedIndex","computedItems","selectedValues","selectedItems","map","item","hasDisplayedItems","hideSelected","filteredItems","length","currentRange","selectedItem","getText","internalSearch","allItems","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","items","internalValue","isFocused","input","isMenuActive","val","oldVal","activateMenu","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","currentItem","getDisabled","newIndex","clearableCallback","genInput","genInputSlot","slot","genSelections","hasSlot","onClick","onInput","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItemText","event"],"mappings":"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","file":"js/chunk-3cac6786.4090866f.js","sourcesContent":["// Styles\nimport './VOverlay.sass'\n\n// Mixins\nimport Colorable from './../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport Toggleable from './../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Themeable,\n  Toggleable\n).extend({\n  name: 'v-overlay',\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: '#212121',\n    },\n    dark: {\n      type: Boolean,\n      default: true,\n    },\n    opacity: {\n      type: [Number, String],\n      default: 0.46,\n    },\n    value: {\n      default: true,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 5,\n    },\n  },\n\n  computed: {\n    __scrim (): VNode {\n      const data = this.setBackgroundColor(this.color, {\n        staticClass: 'v-overlay__scrim',\n        style: {\n          opacity: this.computedOpacity,\n        },\n      })\n\n      return this.$createElement('div', data)\n    },\n    classes (): object {\n      return {\n        'v-overlay--absolute': this.absolute,\n        'v-overlay--active': this.isActive,\n        ...this.themeClasses,\n      }\n    },\n    computedOpacity (): number {\n      return Number(this.isActive ? this.opacity : 0)\n    },\n    styles (): object {\n      return {\n        zIndex: this.zIndex,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-overlay__content',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.__scrim]\n\n    if (this.isActive) children.push(this.genContent())\n\n    return h('div', {\n      staticClass: 'v-overlay',\n      class: this.classes,\n      style: this.styles,\n    }, children)\n  },\n})\n","import VOverlay from './VOverlay'\n\nexport { VOverlay }\n\nexport default VOverlay\n","// Components\nimport VOverlay from '../../components/VOverlay'\n\n// Utilities\nimport {\n  keyCodes,\n  addOnceEventListener,\n  addPassiveEventListener,\n  getZIndex,\n} from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\n\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\ninterface Stackable extends Vue {\n  activeZIndex: number\n}\n\ninterface options {\n  absolute?: boolean\n  $refs: {\n    dialog?: HTMLElement\n    content?: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable & Stackable & options>().extend({\n  name: 'overlayable',\n\n  props: {\n    hideOverlay: Boolean,\n    overlayColor: String,\n    overlayOpacity: [Number, String],\n  },\n\n  data () {\n    return {\n      overlay: null as InstanceType<typeof VOverlay> | null,\n    }\n  },\n\n  watch: {\n    hideOverlay (value) {\n      if (!this.isActive) return\n\n      if (value) this.removeOverlay()\n      else this.genOverlay()\n    },\n  },\n\n  beforeDestroy () {\n    this.removeOverlay()\n  },\n\n  methods: {\n    createOverlay () {\n      const overlay = new VOverlay({\n        propsData: {\n          absolute: this.absolute,\n          value: false,\n          color: this.overlayColor,\n          opacity: this.overlayOpacity,\n        },\n      })\n\n      overlay.$mount()\n\n      const parent = this.absolute\n        ? this.$el.parentNode\n        : document.querySelector('[data-app]')\n\n      parent && parent.insertBefore(overlay.$el, parent.firstChild)\n\n      this.overlay = overlay\n    },\n    genOverlay () {\n      this.hideScroll()\n\n      if (this.hideOverlay) return\n\n      if (!this.overlay) this.createOverlay()\n\n      requestAnimationFrame(() => {\n        if (!this.overlay) return\n\n        if (this.activeZIndex !== undefined) {\n          this.overlay.zIndex = String(this.activeZIndex - 1)\n        } else if (this.$el) {\n          this.overlay.zIndex = getZIndex(this.$el)\n        }\n\n        this.overlay.value = true\n      })\n\n      return true\n    },\n    /** removeOverlay(false) will not restore the scollbar afterwards */\n    removeOverlay (showScroll = true) {\n      if (this.overlay) {\n        addOnceEventListener(this.overlay.$el, 'transitionend', () => {\n          if (\n            !this.overlay ||\n            !this.overlay.$el ||\n            !this.overlay.$el.parentNode ||\n            this.overlay.value\n          ) return\n\n          this.overlay.$el.parentNode.removeChild(this.overlay.$el)\n          this.overlay.$destroy()\n          this.overlay = null\n        })\n\n        this.overlay.value = false\n      }\n\n      showScroll && this.showScroll()\n    },\n    scrollListener (e: WheelEvent & KeyboardEvent) {\n      if (e.type === 'keydown') {\n        if (\n          ['INPUT', 'TEXTAREA', 'SELECT'].includes((e.target as Element).tagName) ||\n          // https://github.com/vuetifyjs/vuetify/issues/4715\n          (e.target as HTMLElement).isContentEditable\n        ) return\n\n        const up = [keyCodes.up, keyCodes.pageup]\n        const down = [keyCodes.down, keyCodes.pagedown]\n\n        if (up.includes(e.keyCode)) {\n          (e as any).deltaY = -1\n        } else if (down.includes(e.keyCode)) {\n          (e as any).deltaY = 1\n        } else {\n          return\n        }\n      }\n\n      if (e.target === this.overlay ||\n        (e.type !== 'keydown' && e.target === document.body) ||\n        this.checkPath(e)) e.preventDefault()\n    },\n    hasScrollbar (el?: Element) {\n      if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n      const style = window.getComputedStyle(el)\n      return ['auto', 'scroll'].includes(style.overflowY!) && el.scrollHeight > el.clientHeight\n    },\n    shouldScroll (el: Element, delta: number) {\n      if (el.scrollTop === 0 && delta < 0) return true\n      return el.scrollTop + el.clientHeight === el.scrollHeight && delta > 0\n    },\n    isInside (el: Element, parent: Element): boolean {\n      if (el === parent) {\n        return true\n      } else if (el === null || el === document.body) {\n        return false\n      } else {\n        return this.isInside(el.parentNode as Element, parent)\n      }\n    },\n    checkPath (e: WheelEvent) {\n      const path = e.path || this.composedPath(e)\n      const delta = e.deltaY\n\n      if (e.type === 'keydown' && path[0] === document.body) {\n        const dialog = this.$refs.dialog\n        // getSelection returns null in firefox in some edge cases, can be ignored\n        const selected = window.getSelection()!.anchorNode as Element\n        if (dialog && this.hasScrollbar(dialog) && this.isInside(selected, dialog)) {\n          return this.shouldScroll(dialog, delta)\n        }\n        return true\n      }\n\n      for (let index = 0; index < path.length; index++) {\n        const el = path[index]\n\n        if (el === document) return true\n        if (el === document.documentElement) return true\n        if (el === this.$refs.content) return true\n\n        if (this.hasScrollbar(el as Element)) return this.shouldScroll(el as Element, delta)\n      }\n\n      return true\n    },\n    /**\n     * Polyfill for Event.prototype.composedPath\n     */\n    composedPath (e: WheelEvent): EventTarget[] {\n      if (e.composedPath) return e.composedPath()\n\n      const path = []\n      let el = e.target as Element\n\n      while (el) {\n        path.push(el)\n\n        if (el.tagName === 'HTML') {\n          path.push(document)\n          path.push(window)\n\n          return path\n        }\n\n        el = el.parentElement!\n      }\n      return path\n    },\n    hideScroll () {\n      if (this.$vuetify.breakpoint.smAndDown) {\n        document.documentElement!.classList.add('overflow-y-hidden')\n      } else {\n        addPassiveEventListener(window, 'wheel', this.scrollListener as EventHandlerNonNull, { passive: false })\n        window.addEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n      }\n    },\n    showScroll () {\n      document.documentElement!.classList.remove('overflow-y-hidden')\n      window.removeEventListener('wheel', this.scrollListener as EventHandlerNonNull)\n      window.removeEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n    },\n  },\n})\n","import './VDialog.sass'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport ThemeProvider from '../../util/ThemeProvider'\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // If the dialog content contains\n      // the click event, or if the\n      // dialog is not active, or if the overlay\n      // is the same element as the target\n      if (this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) return false\n\n      // If we made it here, the click is outside\n      // and is active. If persistent, and the\n      // click is on the overlay, animate\n      this.$emit('click:outside')\n\n      if (this.persistent) {\n        !this.noClickAnimation && this.animateClick()\n\n        return false\n      }\n\n      // close dialog if !persistent, clicked outside and we're the topmost dialog.\n      // Since this should only be called in a capture event (bottom up), we shouldn't need to stop propagation\n      return this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      this.$nextTick(() => {\n        this.$refs.content.focus()\n        this.bind()\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        focusable.length && (focusable[0] as HTMLElement).focus()\n      }\n    },\n  },\n\n  render (h): VNode {\n    const children = []\n    const data = {\n      class: this.classes,\n      ref: 'dialog',\n      directives: [\n        {\n          name: 'click-outside',\n          value: () => { this.isActive = false },\n          args: {\n            closeConditional: this.closeConditional,\n            include: this.getOpenDependentElements,\n          },\n        },\n        { name: 'show', value: this.isActive },\n      ],\n      on: {\n        click: (e: Event) => { e.stopPropagation() },\n      },\n      style: {},\n    }\n\n    if (!this.fullscreen) {\n      data.style = {\n        maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n        width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n      }\n    }\n\n    children.push(this.genActivator())\n\n    let dialog = h('div', data, this.showLazyContent(this.getContentSlot()))\n    if (this.transition) {\n      dialog = h('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n        },\n      }, [dialog])\n    }\n\n    children.push(h('div', {\n      class: this.contentClasses,\n      attrs: {\n        role: 'document',\n        tabindex: this.isActive ? 0 : undefined,\n        ...this.getScopeIdAttrs(),\n      },\n      on: {\n        keydown: this.onKeydown,\n      },\n      style: { zIndex: this.activeZIndex },\n      ref: 'content',\n    }, [\n      this.$createElement(ThemeProvider, {\n        props: {\n          root: true,\n          light: this.light,\n          dark: this.dark,\n        },\n      }, [dialog]),\n    ]))\n\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, children)\n  },\n})\n","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    outlined: Boolean,\n    raised: Boolean,\n    shaped: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.loading || this.disabled,\n        'v-card--outlined': this.outlined,\n        'v-card--raised': this.raised,\n        'v-card--shaped': this.shaped,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | undefined>,\n      default: undefined,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => this.filter(item, String(this.internalSearch), String(this.getText(item))))\n    },\n    internalSearch: {\n      get (): string | undefined {\n        return this.lazySearch\n      },\n      set (val: any) {\n        this.lazySearch = val\n\n        this.$emit('update:search-input', val)\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = undefined\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty || !this.multiple) return\n\n      if (![\n        keyCodes.backspace,\n        keyCodes.left,\n        keyCodes.right,\n        keyCodes.delete,\n      ].includes(keyCode)) return\n\n      const index = this.selectedItems.length - 1\n\n      if (keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = index\n        } else {\n          this.selectedIndex--\n        }\n      } else if (keyCode === keyCodes.right) {\n        if (this.selectedIndex >= index) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (this.selectedIndex === -1) {\n        this.selectedIndex = index\n        return\n      }\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n\n      if ([\n        keyCodes.backspace,\n        keyCodes.delete,\n      ].includes(keyCode) &&\n        !this.getDisabled(currentItem)\n      ) {\n        const newIndex = this.selectedIndex === index\n          ? this.selectedIndex - 1\n          : this.selectedItems[this.selectedIndex + 1]\n            ? this.selectedIndex\n            : -1\n\n        if (newIndex === -1) {\n          this.setValue(this.multiple ? [] : undefined)\n        } else {\n          this.selectItem(currentItem)\n        }\n\n        this.selectedIndex = newIndex\n      }\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = input.data || {}\n      input.data.attrs = input.data.attrs || {}\n      input.data.attrs.autocomplete = input.data.attrs.autocomplete || 'disabled'\n\n      input.data.domProps = input.data.domProps || {}\n      input.data.domProps.value = this.internalSearch\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections () {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick () {\n      if (this.isDisabled) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown () {\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData!.setData('text/plain', currentItemText)\n      event.clipboardData!.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}